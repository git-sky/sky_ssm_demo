<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 自动扫描的包 -->
    <context:component-scan
            base-package="cn.com.sky.spring.transaction.propagation.demo2"/>

    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
    </bean>

    <!-- 配置jdbc模板类 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- 1. 配置事务管理器。以后集成Hibernate、Mybatis需要配置不同的事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="rollbackOnCommitFailure" value="true" />&lt;!&ndash; 场景？？ &ndash;&gt;-->
    </bean>

    <!-- 任何RuntimeException 会 rollback, 任何 checked Exception 不会rollback。 -->
    <!-- 第一种配置事务的方式 ，使用tx标签方式 -->
    <!-- 2. 配置事务属性。传播行为、隔离级别、只读、超时时间回滚 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- <tx:attributes> <tx:method name="purchase" propagation="REQUIRED"
            read-only="false" timeout="30" isolation="DEFAULT" /> <tx:method name="get*"
            read-only="true" /> <tx:method name="purchase" rollback-for="Exception" read-only="false"
            />设置为发生Exception异常都回滚 <tx:method name="*" /> </tx:attributes> -->
        <tx:attributes>
            <tx:method name="actionA" propagation="REQUIRED"/>
            <!-- <tx:method name="updateB" propagation="REQUIRED" /> -->

            <!--<tx:method name="persistB" propagation="REQUIRED" />-->
            <!--<tx:method name="persistB" propagation="SUPPORTS" />-->
            <!--<tx:method name="persistB" propagation="MANDATORY" />-->

            <!--<tx:method name="persistB" propagation="REQUIRES_NEW" />-->
            <!--<tx:method name="persistB" propagation="NOT_SUPPORTED" />-->
            <!--<tx:method name="persistB" propagation="NEVER" />-->
            <tx:method name="persistB" propagation="NESTED"/>

            <!-- <tx:method name="*" propagation="REQUIRES_NEW" /> --><!-- 事务在哪些方法起作用，如果没有配置方法，则事务不对任何方法起作用 -->
        </tx:attributes>
    </tx:advice>

    <!-- 2. 配置事务切入点。并把事务切入点与事务属性关联起来。 -->
    <aop:config>
        <aop:pointcut
                expression="execution(* cn.com.sky.spring.transaction.propagation.demo2.TransactionActionImpl.actionA(..))"
                id="txPointCut"/>
        <aop:pointcut
                expression="execution(* cn.com.sky.spring.transaction.propagation.demo2.TransactionServiceImpl.updateB(..))"
                id="txPointCutService"/>
        <aop:pointcut
                expression="execution(* cn.com.sky.spring.transaction.propagation.demo2.TransactionDaoImpl.persistB(..))"
                id="txPointCutDao"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
        <!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCutService"
            /> -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCutDao"/>
    </aop:config>

</beans>